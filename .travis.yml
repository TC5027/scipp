language: cpp

services:
  - docker

cache: ccache

branches:
  only:
    - master
    - /^\d+(\.\d+)*/

env:
  global:
    - PYTHON_EXECUTABLE="/usr/bin/python3"

before_install:
  - docker pull nvaytet/scipp-ci
  - docker run nvaytet/scipp-ci /bin/sh -c "cd /opt/scipp && git fetch origin +refs/pull/${TRAVIS_PULL_REQUEST}/merge && git checkout -qf FETCH_HEAD"
  # - docker run -d -p 127.0.0.1:80:4567 nvaytet/scipp-ci
  # - docker run nvaytet/scipp-ci
  # - docker ps -a

jobs:
  include:
      # Check clang format and flake8 in the first stage
    - stage: "Code formatting"
      name: "Clang-format"
      if: NOT type = cron
      # before_install: .travis/before_install.sh
      script: docker run nvaytet/scipp-ci /bin/sh -c "cd /opt/scipp && .travis/check_clang_format.sh"
    - name: "Flake8"
      if: NOT type = cron
      # before_install: .travis/before_install.sh
      # script: docker run nvaytet/scipp-ci /bin/sh -c "ls; pwd; .travis/check_flake8.sh"
      script: docker run nvaytet/scipp-ci /bin/sh -c "cd /opt/scipp && .travis/check_flake8.sh"
      # Then start parallel build of gcc and clang in the Test stage
    - stage: "Unit tests"
      # compiler: gcc
      name: "gcc"
      if: NOT type = cron
      # before_install: .travis/before_install.sh
      # install: .travis/install_linux_toolchain.sh
      script: docker run nvaytet/scipp-ci /bin/sh -c "cd /opt/scipp/build && grep PYTHON CMakeCache.txt && grep PREFIX CMakeCache.txt && make -j2 install all-tests all-benchmarks && /opt/scipp/.travis/run_tests.sh"
    - stage: "Unit tests"
      name: "clang"
      if: NOT type = cron
      # before_install: .travis/before_install.sh
      # install: .travis/install_linux_toolchain.sh
      script: docker run nvaytet/scipp-ci /bin/sh -c "/opt/scipp/.travis/run_tests.sh"
    - os: osx
      name: "apple clang"
      if: NOT type = cron
      osx_image: xcode10.2
      before_install: brew install ccache ninja
      env:
        - PYTHON_EXECUTABLE="/usr/local/bin/python3"
      script: .travis/run_tests.sh -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF
    - stage: "Deploy"
      name: "conda linux"
      if: NOT type = cron AND branch = master AND NOT type = pull_request
      git:
        depth: false
      env:
        - PATH="$HOME/miniconda/bin:$PATH"
      install: .travis/install_conda.sh "Miniconda3-latest-Linux-x86_64.sh"
      script:
        - .travis/conda_build_and_deploy.sh --label 'dev'
        - .travis/trigger_docker_build.sh
        - .travis/trigger_readthedocs_build.sh
    - stage: "Deploy"
      os: osx
      osx_image: xcode10.2
      name: "conda osx"
      if: NOT type = cron AND branch = master AND NOT type = pull_request
      git:
        depth: false
      env:
        - PATH="$HOME/miniconda/bin:$PATH"
        - CC=/usr/bin/clang
        - CXX=/usr/bin/clang++
        - OSX_VERSION=10.14
      install:
        - .travis/install_conda.sh "Miniconda3-latest-MacOSX-x86_64.sh"
      script: travis_wait .travis/conda_build_and_deploy.sh --label 'dev'
    - stage: "Deploy"
      name: "conda linux python3.6"
      if: type = cron AND branch = master
      git:
        depth: false
      env:
        - PATH="$HOME/miniconda/bin:$PATH"
      install: .travis/install_conda.sh "Miniconda3-latest-Linux-x86_64.sh"
      script:
        - travis_wait .travis/conda_build_and_deploy.sh --label 'dev' --python 3.6
    - stage: "Deploy"
      name: "release conda linux"
      if: NOT type = cron AND NOT type = pull_request AND tag =~ /^\d+(\.\d+)*/
      git:
        depth: false
      env:
        - PATH="$HOME/miniconda/bin:$PATH"
      install: .travis/install_conda.sh "Miniconda3-latest-Linux-x86_64.sh"
      script:
        - travis_wait .travis/conda_build_and_deploy.sh
        - travis_wait .travis/conda_build_and_deploy.sh --python 3.6
    - stage: "Deploy"
      os: osx
      osx_image: xcode10.2
      name: "release conda osx"
      if: NOT type = cron AND NOT type = pull_request AND tag =~ /^\d+(\.\d+)*/
      git:
        depth: false
      env:
        - PATH="$HOME/miniconda/bin:$PATH"
        - CC=/usr/bin/clang
        - CXX=/usr/bin/clang++
        - OSX_VERSION=10.14
      install:
        - .travis/install_conda.sh "Miniconda3-latest-MacOSX-x86_64.sh"
      script: travis_wait .travis/conda_build_and_deploy.sh
